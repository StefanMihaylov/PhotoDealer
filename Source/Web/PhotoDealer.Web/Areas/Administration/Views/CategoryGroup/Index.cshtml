@using PhotoDealer.Web.ViewModels

@{
    ViewBag.Title = "Edit Category Group";
    const string GroupController = "CategoryGroup";
    const string SubController = "SubCategory";
}

<div class="row">
    <div class="col-md-6 text-center">
        <h3>Category Groups</h3>
        @(Html.Kendo()
              .Grid<CategoryGroupViewModel>()
              .Name(GroupController)
              .Columns(columns =>
              {
                  columns.Bound(c => c.GroupName).Width(140);
                  columns.Command(command => { command.Edit(); command.Destroy(); }).Width(100);
              })
              .ToolBar(toolbar => toolbar.Create())
              .Editable(editable => editable.Mode(GridEditMode.InLine))
              .HtmlAttributes(new { style = "text-align: center;" })
              .Sortable()
              .Pageable(pager => pager.Refresh(true))
              .Selectable(selectable => selectable.Mode(GridSelectionMode.Multiple))
              .DataSource(dataSource => dataSource
                .Ajax()
                .PageSize(10)
                .Events(events => events.Error("error_handler"))
                .Model(model => model.Id(p => p.CategoryGroupId))
                .Create(update => update.Action("Create", GroupController))
                .Read(read => read.Action("Read", GroupController))
                .Update(update => update.Action("Update", GroupController))
                .Destroy(update => update.Action("Destroy", GroupController)))
        )
    </div>
    <div class="col-md-6 text-center">
        <h3>Categories</h3>
        @(Html.Kendo()
              .Grid<CategoryViewModel>()
              .Name(SubController)
              .Columns(columns =>
              {
                  columns.Bound(c => c.Name).Width(140);
                  columns.Command(command => { command.Edit(); command.Destroy(); }).Width(100);
              })
              .ToolBar(toolbar => toolbar.Create())
              .Editable(editable => editable.Mode(GridEditMode.InLine))
              .HtmlAttributes(new { style = "text-align: center;" })
              .Sortable()
              .Pageable(pager => pager.Refresh(true))
              .DataSource(dataSource => dataSource
                .Ajax()
                .PageSize(10)
                .Events(events => events.Error("error_handler"))
                .Model(model => model.Id(p => p.CategoryGroupId))
                .Create(update => update.Action("Create", SubController))
                .Read(read => read.Action("Read", SubController))
                .Update(update => update.Action("Update", SubController))
                .Destroy(update => update.Action("Destroy", SubController)))
        )
    </div>
</div>

<script>
    $(document).ready(function () {
        function AddUrParams(url, methor, id) {
            var lastIndex = url.lastIndexOf(methor);
            var end = lastIndex + methor.length;
            var newUrl = url.substr(0, end);
            if (id) {
                newUrl = newUrl + '/' + id;
            }
            return newUrl;
        }

        function changeUrl(grid, id) {
            var urlOptions = grid.dataSource.transport.options;
            urlOptions.read.url = AddUrParams(urlOptions.read.url, 'Read', id);
            urlOptions.create.url = AddUrParams(urlOptions.create.url, 'Create', id);
            grid.dataSource.read();
        }

        var $masterGrid = $("@("#" + GroupController)").data("kendoGrid");
        var $subGrid = $("@("#" + SubController)").data("kendoGrid");

        $masterGrid.bind("change", function () {
            var selectedBackup = this.dataItem(this.select()),
                selectedId = selectedBackup.CategoryGroupId;

            changeUrl($subGrid, selectedId);
        });

        // page change
        $masterGrid.dataSource.bind("change", function () {
            changeUrl($subGrid, undefined);
        });
    });
</script>

<script type="text/javascript">
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }
</script>